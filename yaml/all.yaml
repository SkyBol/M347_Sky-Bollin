apiVersion: v1
items:
- apiVersion: v1 # Backend Service 100
  kind: Service
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.prod.yml --out k8s-kompose.yaml
      kompose.image-pull-policy: Always
      kompose.service.nodeport.port: "30100"
      kompose.service.type: NodePort
      kompose.version: 1.28.0 (c4137012e)
    creationTimestamp: null
    labels:
      io.kompose.service: backend
    name: backend
  spec:
    type: NodePort
    ports:
      - name: "8080"
        nodePort: 30100
        port: 8080
        targetPort: 8080
    selector:
      io.kompose.service: backend
  status:
    loadBalancer: {}
- apiVersion: apps/v1 # Backend Deployment
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.prod.yml --out k8s-kompose.yaml
      kompose.image-pull-policy: Always
      kompose.service.nodeport.port: "30100"
      kompose.service.type: NodePort
      kompose.version: 1.28.0 (c4137012e)
    creationTimestamp: null
    labels:
      io.kompose.service: backend
    name: backend
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: backend
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.prod.yml --out k8s-kompose.yaml
          kompose.image-pull-policy: Always
          kompose.service.nodeport.port: "30100"
          kompose.service.type: NodePort
          kompose.version: 1.28.0 (c4137012e)
        creationTimestamp: null
        labels:
          io.kompose.service: backend
      spec:
        containers:
        - image: asuzas/docker-m347-backend:v0.0.5
          imagePullPolicy: Always
          name: backend
          ports:
          - containerPort: 8080
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}

- apiVersion: v1 # Frontend Service 102
  kind: Service
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.prod.yml --out k8s-kompose.yaml
      kompose.image-pull-policy: Always
      kompose.service.nodeport.port: "30102"
      kompose.service.type: NodePort
      kompose.version: 1.28.0 (c4137012e)
    creationTimestamp: null
    labels:
      io.kompose.service: frontend
    name: frontend
  spec:
    type: NodePort
    ports:
      - name: "80"
        nodePort: 30102
        port: 80
        targetPort: 80
    selector:
      io.kompose.service: frontend
  status:
    loadBalancer: {}
- apiVersion: apps/v1 # Frontend Deployment
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.prod.yml --out k8s-kompose.yaml
      kompose.image-pull-policy: Always
      kompose.service.nodeport.port: "30102"
      kompose.service.type: NodePort
      kompose.version: 1.28.0 (c4137012e)
    creationTimestamp: null
    labels:
      io.kompose.service: frontend
    name: frontend
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: frontend
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.prod.yml --out k8s-kompose.yaml
          kompose.image-pull-policy: Always
          kompose.service.nodeport.port: "30100"
          kompose.service.type: NodePort
          kompose.version: 1.28.0 (c4137012e)
        creationTimestamp: null
        labels:
          io.kompose.service: frontend
      spec:
        containers:
        - image: asuzas/docker-m347-frontend:v0.0.5
          imagePullPolicy: Always
          name: frontend
          ports:
          - containerPort: 80
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}

- apiVersion: v1 # db Service 101
  kind: Service
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.prod.yml --out k8s-kompose.yaml
      kompose.image-pull-policy: Always
      kompose.service.nodeport.port: "30101"
      kompose.service.type: NodePort
      kompose.version: 1.28.0 (c4137012e)
    creationTimestamp: null
    labels:
      io.kompose.service: db
    name: db
  spec:
    type: NodePort
    ports:
      - name: "5432"
        nodePort: 30101
        port: 5432
        targetPort: 5432
    selector:
      io.kompose.service: backend
  status:
    loadBalancer: {}
- apiVersion: apps/v1 # db Deployment
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.prod.yml --out k8s-kompose.yaml
      kompose.image-pull-policy: Always
      kompose.service.nodeport.port: "30101"
      kompose.service.type: NodePort
      kompose.version: 1.28.0 (c4137012e)
    creationTimestamp: null
    labels:
      io.kompose.service: db
    name: db
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: db
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.prod.yml --out k8s-kompose.yaml
          kompose.image-pull-policy: Always
          kompose.service.nodeport.port: "30101"
          kompose.service.type: NodePort
          kompose.version: 1.28.0 (c4137012e)
        creationTimestamp: null
        labels:
          io.kompose.service: db
      spec:
        containers:
        - image: postgres:10-alpine
          imagePullPolicy: Always
          name: db
          ports:
          - containerPort: 5432
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}

kind: List
metadata: {}